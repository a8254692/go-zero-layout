// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	userbehavior "minicode.com/sirius/go-back-server/service/userbehavior/api/internal/handler/userbehavior"
	"minicode.com/sirius/go-back-server/service/userbehavior/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckAuth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/focus_follow_list",
					Handler: userbehavior.FocusFollowListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/add_focus",
					Handler: userbehavior.AddFocusHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/add_praise",
					Handler: userbehavior.AddPraiseHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/add_share_num",
					Handler: userbehavior.AddShareNumHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/del_focus",
					Handler: userbehavior.DelFocusHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/del_praise",
					Handler: userbehavior.DelPraiseHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/comment/add",
					Handler: userbehavior.AddCommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userbehavior/comment/list",
					Handler: userbehavior.GetCommentListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1"),
	)
}
