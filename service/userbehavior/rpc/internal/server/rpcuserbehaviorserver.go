// Code generated by goctl. DO NOT EDIT!
// Source: rpcuserbehavior.proto

package server

import (
	"context"

	"minicode.com/sirius/go-back-server/service/userbehavior/rpc/internal/logic"
	"minicode.com/sirius/go-back-server/service/userbehavior/rpc/internal/svc"
	"minicode.com/sirius/go-back-server/service/userbehavior/rpc/userBehaviorProto"
)

type RpcUserBehaviorServer struct {
	svcCtx *svc.ServiceContext
	userBehaviorProto.UnimplementedRpcUserBehaviorServer
}

func NewRpcUserBehaviorServer(svcCtx *svc.ServiceContext) *RpcUserBehaviorServer {
	return &RpcUserBehaviorServer{
		svcCtx: svcCtx,
	}
}

func (s *RpcUserBehaviorServer) CheckHealth(ctx context.Context, in *userBehaviorProto.CheckHealthRequest) (*userBehaviorProto.CheckHealthReply, error) {
	l := logic.NewCheckHealthLogic(ctx, s.svcCtx)
	return l.CheckHealth(in)
}

// 获取粉丝关注数量
func (s *RpcUserBehaviorServer) GetUserCount(ctx context.Context, in *userBehaviorProto.GetUserCountReq) (*userBehaviorProto.GetUserCountResp, error) {
	l := logic.NewGetUserCountLogic(ctx, s.svcCtx)
	return l.GetUserCount(in)
}

// 获取作品点赞评论数量
func (s *RpcUserBehaviorServer) GetProduceCount(ctx context.Context, in *userBehaviorProto.GetProduceCountReq) (*userBehaviorProto.GetProduceCountResp, error) {
	l := logic.NewGetProduceCountLogic(ctx, s.svcCtx)
	return l.GetProduceCount(in)
}

// 获取关注/粉丝列表
func (s *RpcUserBehaviorServer) GetFocusFollowList(ctx context.Context, in *userBehaviorProto.GetFocusFollowListReq) (*userBehaviorProto.GetFocusFollowListResp, error) {
	l := logic.NewGetFocusFollowListLogic(ctx, s.svcCtx)
	return l.GetFocusFollowList(in)
}

// 获取用户是否点赞
func (s *RpcUserBehaviorServer) GetUserIsPraise(ctx context.Context, in *userBehaviorProto.GetUserIsPraiseReq) (*userBehaviorProto.GetUserIsPraiseResp, error) {
	l := logic.NewGetUserIsPraiseLogic(ctx, s.svcCtx)
	return l.GetUserIsPraise(in)
}

// 获取点赞列表
func (s *RpcUserBehaviorServer) GetPraiseList(ctx context.Context, in *userBehaviorProto.GetPraiseListReq) (*userBehaviorProto.GetPraiseListResp, error) {
	l := logic.NewGetPraiseListLogic(ctx, s.svcCtx)
	return l.GetPraiseList(in)
}

// 获取用户关注状态
func (s *RpcUserBehaviorServer) GetUserFocusStatus(ctx context.Context, in *userBehaviorProto.GetUserFocusStatusReq) (*userBehaviorProto.GetUserFocusStatusResp, error) {
	l := logic.NewGetUserFocusStatusLogic(ctx, s.svcCtx)
	return l.GetUserFocusStatus(in)
}

// 批量获取作品点赞评论数量
func (s *RpcUserBehaviorServer) GetProduceCounts(ctx context.Context, in *userBehaviorProto.GetProduceCountsReq) (*userBehaviorProto.GetProduceCountsResp, error) {
	l := logic.NewGetProduceCountsLogic(ctx, s.svcCtx)
	return l.GetProduceCounts(in)
}

// 新增关注详情
func (s *RpcUserBehaviorServer) AddFocus(ctx context.Context, in *userBehaviorProto.AddFocusReq) (*userBehaviorProto.AddFocusResp, error) {
	l := logic.NewAddFocusLogic(ctx, s.svcCtx)
	return l.AddFocus(in)
}

// 新增点赞详情
func (s *RpcUserBehaviorServer) AddPraise(ctx context.Context, in *userBehaviorProto.AddPraiseReq) (*userBehaviorProto.AddPraiseResp, error) {
	l := logic.NewAddPraiseLogic(ctx, s.svcCtx)
	return l.AddPraise(in)
}

// 新增评论计数
func (s *RpcUserBehaviorServer) AddCommentNum(ctx context.Context, in *userBehaviorProto.AddCommentNumReq) (*userBehaviorProto.AddCommentNumResp, error) {
	l := logic.NewAddCommentNumLogic(ctx, s.svcCtx)
	return l.AddCommentNum(in)
}

// 新增点赞计数
func (s *RpcUserBehaviorServer) AddPraiseNum(ctx context.Context, in *userBehaviorProto.AddPraiseNumReq) (*userBehaviorProto.AddPraiseNumResp, error) {
	l := logic.NewAddPraiseNumLogic(ctx, s.svcCtx)
	return l.AddPraiseNum(in)
}

// 新增粉丝计数
func (s *RpcUserBehaviorServer) AddFollowNum(ctx context.Context, in *userBehaviorProto.AddFollowNumReq) (*userBehaviorProto.AddFollowNumResp, error) {
	l := logic.NewAddFollowNumLogic(ctx, s.svcCtx)
	return l.AddFollowNum(in)
}

// 新增关注计数
func (s *RpcUserBehaviorServer) AddFocusNum(ctx context.Context, in *userBehaviorProto.AddFocusNumReq) (*userBehaviorProto.AddFocusNumResp, error) {
	l := logic.NewAddFocusNumLogic(ctx, s.svcCtx)
	return l.AddFocusNum(in)
}

// 新增fe计数
func (s *RpcUserBehaviorServer) AddShareNum(ctx context.Context, in *userBehaviorProto.AddShareNumReq) (*userBehaviorProto.AddShareNumResp, error) {
	l := logic.NewAddShareNumLogic(ctx, s.svcCtx)
	return l.AddShareNum(in)
}

// 取消关注详情
func (s *RpcUserBehaviorServer) DelFocus(ctx context.Context, in *userBehaviorProto.DelFocusReq) (*userBehaviorProto.DelFocusResp, error) {
	l := logic.NewDelFocusLogic(ctx, s.svcCtx)
	return l.DelFocus(in)
}

// 取消点赞详情
func (s *RpcUserBehaviorServer) DelPraise(ctx context.Context, in *userBehaviorProto.DelPraiseReq) (*userBehaviorProto.DelPraiseResp, error) {
	l := logic.NewDelPraiseLogic(ctx, s.svcCtx)
	return l.DelPraise(in)
}

//  添加评论
func (s *RpcUserBehaviorServer) AddComment(ctx context.Context, in *userBehaviorProto.AddCommentReq) (*userBehaviorProto.AddCommentResp, error) {
	l := logic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

//  获取评论列表
func (s *RpcUserBehaviorServer) GetCommentList(ctx context.Context, in *userBehaviorProto.GetCommentListReq) (*userBehaviorProto.GetCommentListResp, error) {
	l := logic.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}
