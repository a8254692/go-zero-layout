// Code generated by goctl. DO NOT EDIT!
// Source: rpcuserbehavior.proto

package rpcuserbehavior

import (
	"context"

	"minicode.com/sirius/go-back-server/service/userbehavior/rpc/userBehaviorProto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCommentNumReq       = userBehaviorProto.AddCommentNumReq
	AddCommentNumResp      = userBehaviorProto.AddCommentNumResp
	AddCommentReq          = userBehaviorProto.AddCommentReq
	AddCommentResp         = userBehaviorProto.AddCommentResp
	AddFocusNumReq         = userBehaviorProto.AddFocusNumReq
	AddFocusNumResp        = userBehaviorProto.AddFocusNumResp
	AddFocusReq            = userBehaviorProto.AddFocusReq
	AddFocusResp           = userBehaviorProto.AddFocusResp
	AddFollowNumReq        = userBehaviorProto.AddFollowNumReq
	AddFollowNumResp       = userBehaviorProto.AddFollowNumResp
	AddPraiseNumReq        = userBehaviorProto.AddPraiseNumReq
	AddPraiseNumResp       = userBehaviorProto.AddPraiseNumResp
	AddPraiseReq           = userBehaviorProto.AddPraiseReq
	AddPraiseResp          = userBehaviorProto.AddPraiseResp
	AddShareNumReq         = userBehaviorProto.AddShareNumReq
	AddShareNumResp        = userBehaviorProto.AddShareNumResp
	CheckHealthReply       = userBehaviorProto.CheckHealthReply
	CheckHealthRequest     = userBehaviorProto.CheckHealthRequest
	CommentList            = userBehaviorProto.CommentList
	DelFocusReq            = userBehaviorProto.DelFocusReq
	DelFocusResp           = userBehaviorProto.DelFocusResp
	DelPraiseReq           = userBehaviorProto.DelPraiseReq
	DelPraiseResp          = userBehaviorProto.DelPraiseResp
	GetCommentListReq      = userBehaviorProto.GetCommentListReq
	GetCommentListResp     = userBehaviorProto.GetCommentListResp
	GetFocusFollowListData = userBehaviorProto.GetFocusFollowListData
	GetFocusFollowListReq  = userBehaviorProto.GetFocusFollowListReq
	GetFocusFollowListResp = userBehaviorProto.GetFocusFollowListResp
	GetPraiseListData      = userBehaviorProto.GetPraiseListData
	GetPraiseListReq       = userBehaviorProto.GetPraiseListReq
	GetPraiseListResp      = userBehaviorProto.GetPraiseListResp
	GetProduceCountReq     = userBehaviorProto.GetProduceCountReq
	GetProduceCountResp    = userBehaviorProto.GetProduceCountResp
	GetProduceCountsData   = userBehaviorProto.GetProduceCountsData
	GetProduceCountsReq    = userBehaviorProto.GetProduceCountsReq
	GetProduceCountsResp   = userBehaviorProto.GetProduceCountsResp
	GetUserCountReq        = userBehaviorProto.GetUserCountReq
	GetUserCountResp       = userBehaviorProto.GetUserCountResp
	GetUserFocusStatusReq  = userBehaviorProto.GetUserFocusStatusReq
	GetUserFocusStatusResp = userBehaviorProto.GetUserFocusStatusResp
	GetUserIsPraiseReq     = userBehaviorProto.GetUserIsPraiseReq
	GetUserIsPraiseResp    = userBehaviorProto.GetUserIsPraiseResp

	RpcUserBehavior interface {
		CheckHealth(ctx context.Context, in *CheckHealthRequest, opts ...grpc.CallOption) (*CheckHealthReply, error)
		// 获取粉丝关注数量
		GetUserCount(ctx context.Context, in *GetUserCountReq, opts ...grpc.CallOption) (*GetUserCountResp, error)
		// 获取作品点赞评论数量
		GetProduceCount(ctx context.Context, in *GetProduceCountReq, opts ...grpc.CallOption) (*GetProduceCountResp, error)
		// 获取关注/粉丝列表
		GetFocusFollowList(ctx context.Context, in *GetFocusFollowListReq, opts ...grpc.CallOption) (*GetFocusFollowListResp, error)
		// 获取用户是否点赞
		GetUserIsPraise(ctx context.Context, in *GetUserIsPraiseReq, opts ...grpc.CallOption) (*GetUserIsPraiseResp, error)
		// 获取点赞列表
		GetPraiseList(ctx context.Context, in *GetPraiseListReq, opts ...grpc.CallOption) (*GetPraiseListResp, error)
		// 获取用户关注状态
		GetUserFocusStatus(ctx context.Context, in *GetUserFocusStatusReq, opts ...grpc.CallOption) (*GetUserFocusStatusResp, error)
		// 批量获取作品点赞评论数量
		GetProduceCounts(ctx context.Context, in *GetProduceCountsReq, opts ...grpc.CallOption) (*GetProduceCountsResp, error)
		// 新增关注详情
		AddFocus(ctx context.Context, in *AddFocusReq, opts ...grpc.CallOption) (*AddFocusResp, error)
		// 新增点赞详情
		AddPraise(ctx context.Context, in *AddPraiseReq, opts ...grpc.CallOption) (*AddPraiseResp, error)
		// 新增评论计数
		AddCommentNum(ctx context.Context, in *AddCommentNumReq, opts ...grpc.CallOption) (*AddCommentNumResp, error)
		// 新增点赞计数
		AddPraiseNum(ctx context.Context, in *AddPraiseNumReq, opts ...grpc.CallOption) (*AddPraiseNumResp, error)
		// 新增粉丝计数
		AddFollowNum(ctx context.Context, in *AddFollowNumReq, opts ...grpc.CallOption) (*AddFollowNumResp, error)
		// 新增关注计数
		AddFocusNum(ctx context.Context, in *AddFocusNumReq, opts ...grpc.CallOption) (*AddFocusNumResp, error)
		// 新增fe计数
		AddShareNum(ctx context.Context, in *AddShareNumReq, opts ...grpc.CallOption) (*AddShareNumResp, error)
		// 取消关注详情
		DelFocus(ctx context.Context, in *DelFocusReq, opts ...grpc.CallOption) (*DelFocusResp, error)
		// 取消点赞详情
		DelPraise(ctx context.Context, in *DelPraiseReq, opts ...grpc.CallOption) (*DelPraiseResp, error)
		//  添加评论
		AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error)
		//  获取评论列表
		GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error)
	}

	defaultRpcUserBehavior struct {
		cli zrpc.Client
	}
)

func NewRpcUserBehavior(cli zrpc.Client) RpcUserBehavior {
	return &defaultRpcUserBehavior{
		cli: cli,
	}
}

func (m *defaultRpcUserBehavior) CheckHealth(ctx context.Context, in *CheckHealthRequest, opts ...grpc.CallOption) (*CheckHealthReply, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.CheckHealth(ctx, in, opts...)
}

// 获取粉丝关注数量
func (m *defaultRpcUserBehavior) GetUserCount(ctx context.Context, in *GetUserCountReq, opts ...grpc.CallOption) (*GetUserCountResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetUserCount(ctx, in, opts...)
}

// 获取作品点赞评论数量
func (m *defaultRpcUserBehavior) GetProduceCount(ctx context.Context, in *GetProduceCountReq, opts ...grpc.CallOption) (*GetProduceCountResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetProduceCount(ctx, in, opts...)
}

// 获取关注/粉丝列表
func (m *defaultRpcUserBehavior) GetFocusFollowList(ctx context.Context, in *GetFocusFollowListReq, opts ...grpc.CallOption) (*GetFocusFollowListResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetFocusFollowList(ctx, in, opts...)
}

// 获取用户是否点赞
func (m *defaultRpcUserBehavior) GetUserIsPraise(ctx context.Context, in *GetUserIsPraiseReq, opts ...grpc.CallOption) (*GetUserIsPraiseResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetUserIsPraise(ctx, in, opts...)
}

// 获取点赞列表
func (m *defaultRpcUserBehavior) GetPraiseList(ctx context.Context, in *GetPraiseListReq, opts ...grpc.CallOption) (*GetPraiseListResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetPraiseList(ctx, in, opts...)
}

// 获取用户关注状态
func (m *defaultRpcUserBehavior) GetUserFocusStatus(ctx context.Context, in *GetUserFocusStatusReq, opts ...grpc.CallOption) (*GetUserFocusStatusResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetUserFocusStatus(ctx, in, opts...)
}

// 批量获取作品点赞评论数量
func (m *defaultRpcUserBehavior) GetProduceCounts(ctx context.Context, in *GetProduceCountsReq, opts ...grpc.CallOption) (*GetProduceCountsResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetProduceCounts(ctx, in, opts...)
}

// 新增关注详情
func (m *defaultRpcUserBehavior) AddFocus(ctx context.Context, in *AddFocusReq, opts ...grpc.CallOption) (*AddFocusResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddFocus(ctx, in, opts...)
}

// 新增点赞详情
func (m *defaultRpcUserBehavior) AddPraise(ctx context.Context, in *AddPraiseReq, opts ...grpc.CallOption) (*AddPraiseResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddPraise(ctx, in, opts...)
}

// 新增评论计数
func (m *defaultRpcUserBehavior) AddCommentNum(ctx context.Context, in *AddCommentNumReq, opts ...grpc.CallOption) (*AddCommentNumResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddCommentNum(ctx, in, opts...)
}

// 新增点赞计数
func (m *defaultRpcUserBehavior) AddPraiseNum(ctx context.Context, in *AddPraiseNumReq, opts ...grpc.CallOption) (*AddPraiseNumResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddPraiseNum(ctx, in, opts...)
}

// 新增粉丝计数
func (m *defaultRpcUserBehavior) AddFollowNum(ctx context.Context, in *AddFollowNumReq, opts ...grpc.CallOption) (*AddFollowNumResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddFollowNum(ctx, in, opts...)
}

// 新增关注计数
func (m *defaultRpcUserBehavior) AddFocusNum(ctx context.Context, in *AddFocusNumReq, opts ...grpc.CallOption) (*AddFocusNumResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddFocusNum(ctx, in, opts...)
}

// 新增fe计数
func (m *defaultRpcUserBehavior) AddShareNum(ctx context.Context, in *AddShareNumReq, opts ...grpc.CallOption) (*AddShareNumResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddShareNum(ctx, in, opts...)
}

// 取消关注详情
func (m *defaultRpcUserBehavior) DelFocus(ctx context.Context, in *DelFocusReq, opts ...grpc.CallOption) (*DelFocusResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.DelFocus(ctx, in, opts...)
}

// 取消点赞详情
func (m *defaultRpcUserBehavior) DelPraise(ctx context.Context, in *DelPraiseReq, opts ...grpc.CallOption) (*DelPraiseResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.DelPraise(ctx, in, opts...)
}

//  添加评论
func (m *defaultRpcUserBehavior) AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

//  获取评论列表
func (m *defaultRpcUserBehavior) GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error) {
	client := userBehaviorProto.NewRpcUserBehaviorClient(m.cli.Conn())
	return client.GetCommentList(ctx, in, opts...)
}
